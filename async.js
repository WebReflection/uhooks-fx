self.uhooksFX=function(e){"use strict";let t=null,n=new Set;const s=e=>{const{$:t,r:n,h:s}=e;h(n)&&(c.get(s).delete(e),n()),h(e.r=t())&&c.get(s).add(e)},a=()=>{const e=n;n=new Set,e.forEach((({h:e,c:t,a:n,e:s})=>{s&&e.apply(t,n)}))},c=new WeakMap,o=[],r=[];function u(e,t){return e!==this[t]}const l=()=>t,h=e=>"function"==typeof e,i=e=>{const n={h:a,c:null,a:null,e:0,i:0,s:[]};return a;function a(){const a=t;t=n,n.e=n.i=0;try{return e.apply(n.c=this,n.a=arguments)}finally{t=a,o.length&&f.then(o.forEach.bind(o.splice(0),s)),r.length&&r.splice(0).forEach(s)}}},f=Promise.resolve();function p(e){const{_:t,value:n}=this;n!==e&&(this._=new Set,this.value=e,t.forEach((({h:e,c:t,a:n})=>{e.apply(t,n)})))}const d=(e,t)=>{const n=l(),{i:s,s:a}=n;return s!==a.length&&t&&!t.some(u,a[s]._)||(a[s]={$:e(),_:t}),a[n.i++].$},y=e=>(t,n)=>{const s=l(),{i:a,s:o,h:r}=s,h=a===o.length;s.i++,h&&(c.has(r)||c.set(r,new Set),o[a]={$:t,_:n,r:null,d:!1,h:r}),(h||!n||o[a].d||n.some(u,o[a]._))&&e.push(o[a]),o[a].$=t,o[a]._=n,o[a].d=!1},g=y(o),w=y(r),E=(e,t)=>h(t)?t(e):t,$=(e,t,s)=>{const c=l(),{i:o,s:r}=c;o===r.length&&r.push({$:h(s)?s(t):E(void 0,t),set:t=>{r[o].$=e(r[o].$,t),(e=>{n.has(e)||(e.e=1,n.add(e),f.then(a))})(c)}});const{$:u,set:i}=r[c.i++];return[u,i]},_=new WeakMap,v=e=>{const t=i(e);return _.set(n,t),n;async function n(){return await t.apply(this,arguments)}};
/*! (c) Andrea Giammarchi - ISC */
let k=null,S=null,M=null;const m=new WeakMap,W=new WeakMap,C=(e,t,n,s)=>{const a=a=>{m.has(e)||(m.set(e,0),f.then((()=>{m.delete(e),e.apply(t,n)}))),s(a)};return W.set(s,a),a},b=(e,t,n,s)=>e?[s[0],W.get(s[1])||C(e,t,n,s[1])]:s;return e.createContext=e=>({_:new Set,provide:p,value:e}),e.dropEffect=e=>(e=>{const t=c.get(e);t&&f.then((()=>{t.forEach((e=>{e.r(),e.r=null,e.d=!0})),t.clear()}))})(_.get(e)),e.hasEffect=e=>(e=>c.has(e))(_.get(e)),e.hooked=(e,t)=>{const n=v(t?async function(){const[t,s,a]=[k,S,M];[k,S,M]=[n,this,arguments];try{return await e.apply(S,M)}finally{[k,S,M]=[t,s,a]}}:e);return n},e.useCallback=(e,t)=>d((()=>e),t),e.useContext=({_:e,value:t})=>(e.add(l()),t),e.useEffect=g,e.useLayoutEffect=w,e.useMemo=d,e.useReducer=(e,t,n)=>b(k,S,M,$(e,t,n)),e.useRef=e=>{const t=l(),{i:n,s:s}=t;return n===s.length&&s.push({current:e}),s[t.i++]},e.useState=e=>b(k,S,M,(e=>$(E,e))(e)),e.wait=f,e}({});
