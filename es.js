self.uhooksFX=function(e){"use strict";var t=Promise;let n=null,s=new Set;const l=new WeakMap,o=e=>{const{$:t,r:n,h:s}=e;f(n)&&(c.get(s).delete(e),n()),f(e.r=t())&&c.get(s).add(e)},u=()=>{const e=s;s=new Set,e.forEach(d)},c=new WeakMap,a=[],r=[];function h(e,t){return e!==this[t]}const i=()=>l.get(n),f=e=>"function"==typeof e,p=e=>{const t={h:s,c:null,a:null,e:0,i:0,s:[]};return l.set(s,t),s;function s(){const l=n;n=s,t.e=t.i=0;try{return e.apply(t.c=this,t.a=arguments)}finally{n=l,a.length&&y.then(a.forEach.bind(a.splice(0),o)),r.length&&r.splice(0).forEach(o)}}},d=({h:e,c:t,a:n,e:s})=>{s&&e.apply(t,n)},y=new t((e=>e()));function g(e){const{_:t,value:n}=this;n!==e&&(this._=new Set,this.value=e,t.forEach(d))}const w=(e,t)=>{const n=i(),{i:s,s:l}=n;return s!==l.length&&t&&!t.some(h,l[s]._)||(l[s]={$:e(),_:t}),l[n.i++].$},_=e=>(t,n)=>{const s=i(),{i:l,s:o,h:u}=s,a=l===o.length;a&&(c.has(u)||c.set(u,new Set),o.push({$:t,_:n,r:null,h:u}));const r=o[s.i++];(a||!n||n.some(h,r._))&&e.push(r)},v=_(a),E=_(r),$=(e,t)=>f(t)?t(e):t,k=(e,t,n)=>{const l=i(),{i:o,s:c}=l;o===c.length&&c.push({$:f(n)?n(t):$(void 0,t),set:t=>{c[o].$=e(c[o].$,t),(e=>{s.has(e)||(e.e=1,s.add(e),y.then(u))})(l)}});const{$:a,set:r}=c[l.i++];return[a,r]};
/*! (c) Andrea Giammarchi - ISC */
let S=null,M=null,m=null;const b=new WeakMap,C=(e,t,n,s)=>e?[s[0],l=>{b.has(e)||(b.set(e,0),y.then((()=>{b.delete(e),e.apply(t,n)}))),s[1](l)}]:s;return e.createContext=e=>({_:new Set,provide:g,value:e}),e.dropEffect=e=>{const t=c.get(e);t&&y.then((()=>{t.forEach((e=>{e.r(),e.r=null})),t.clear()}))},e.hasEffect=e=>c.has(e),e.hooked=(e,t)=>p(t?function t(){const[n,s,l]=[S,M,m];[S,M,m]=[t,this,arguments];try{return e.apply(M,m)}finally{[S,M,m]=[n,s,l]}}:e),e.useCallback=(e,t)=>w((()=>e),t),e.useContext=({_:e,value:t})=>(e.add(i()),t),e.useEffect=v,e.useLayoutEffect=E,e.useMemo=w,e.useReducer=(e,t,n)=>C(S,M,m,k(e,t,n)),e.useRef=e=>{const t=i(),{i:n,s:s}=t;return n===s.length&&s.push({current:e}),s[t.i++]},e.useState=e=>C(S,M,m,(e=>k($,e))(e)),e.wait=y,e}({});
