self.uhooksFX=function(e){"use strict";var t=Promise;let n=null,s=new Set;const o=new WeakMap,c=e=>{const{$:t,r:n,h:s}=e;f(n)&&(a.get(s).delete(e),n()),f(e.r=t())&&a.get(s).add(e)},u=()=>{const e=s;s=new Set,e.forEach(d)},a=new WeakMap,r=[],l=[];function h(e,t){return e!==this[t]}const i=()=>o.get(n),f=e=>"function"==typeof e,p=e=>{const t={h:s,c:null,a:null,e:0,i:0,s:[]};return o.set(s,t),s;function s(){const o=n;n=s,t.e=t.i=0;try{return e.apply(t.c=this,t.a=arguments)}finally{n=o,r.length&&_.then(r.forEach.bind(r.splice(0),c)),l.length&&l.splice(0).forEach(c)}}},d=({h:e,c:t,a:n,e:s})=>{s&&e.apply(t,n)},_=new t((e=>e()));function g(e){const{_:t,value:n}=this;n!==e&&(this._=new Set,this.value=e,t.forEach(d))}const w=(e,t)=>{const n=i(),{i:s,s:o}=n;return s===o.length?o.push({$:e(),_:t}):t&&!t.some(h,o[s]._)||(o[s]={$:e(),_:t}),o[n.i++].$},y=e=>(t,n)=>{const s=i(),{i:o,s:c,h:u}=s,r=o===c.length;r&&(a.has(u)||a.set(u,new Set),c.push({$:t,_:n,r:null,h:u}));const l=c[s.i++];(r||!n||n.some(h,l._))&&e.push(l)},v=y(r),E=y(l),$=(e,t)=>f(t)?t(e):t,k=(e,t,n)=>{const o=i(),{i:c,s:a}=o;c===a.length&&a.push({$:f(n)?n(t):$(void 0,t),set:t=>{a[c].$=e(a[c].$,t),(e=>{s.has(e)||(e.e=1,s.add(e),_.then(u))})(o)}});const{$:r,set:l}=a[o.i++];return[r,l]};
/*! (c) Andrea Giammarchi - ISC */
let S=null;const M=new WeakMap,m=(e,t)=>e?[t[0],n=>{M.has(e)||(M.set(e,0),_.then((()=>{M.delete(e),e()}))),t[1](n)}]:t;return e.createContext=e=>({_:new Set,provide:g,value:e}),e.dropEffect=e=>{const t=a.get(e);t&&_.then((()=>{t.forEach((e=>{e.r(),e.r=null})),t.clear()}))},e.hasEffect=e=>a.has(e),e.hooked=(e,t)=>p(t?function t(){const n=S;S=t;try{return e.apply(this,arguments)}finally{S=n}}:e),e.useCallback=(e,t)=>w((()=>e),t),e.useContext=({_:e,value:t})=>(e.add(i()),t),e.useEffect=v,e.useLayoutEffect=E,e.useMemo=w,e.useReducer=(e,t,n)=>m(S,k(e,t,n)),e.useRef=e=>{const t=i(),{i:n,s:s}=t;return n===s.length&&s.push({current:e}),s[t.i++]},e.useState=e=>m(S,(e=>k($,e))(e)),e.wait=_,e}({});
